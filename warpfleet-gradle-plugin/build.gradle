plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'eclipse'
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'signing'
    id 'net.nemerosa.versioning' version "2.15.1"
    id 'io.codearte.nexus-staging' version "0.30.0"
    id "pl.droidsonroids.jacoco.testkit" version "1.0.9"
}
versioning {
    gitRepoRootDir = '.'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
project.group 'io.warp10'
project.version '1.0-SNAPSHOT'
project.description = 'WarpFleet Gradle Plugin'
project.version = versioning.info.lastTag + (versioning.info.tag != null ? '' : '-' + versioning.info.build)

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

jacocoTestReport {
    dependsOn test
    additionalClassDirs.from = layout.buildDirectory.dir("classes/main/java")
    additionalSourceDirs.from = layout.buildDirectory.dir("src/main/java")
    reports {
        xml.required = false
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

dependencies {
    implementation 'com.konghq:unirest-java:3.14.1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.10.0'
    implementation 'com.vladsch.flexmark:flexmark-all:0.62.2'

    testImplementation gradleTestKit()
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
    testLogging {
        events "passed"
    }
    finalizedBy jacocoTestReport
}


gradlePlugin {
    automatedPublishing = false
    plugins {
        WFPlugin {
            id = 'io.warp10.warpfleet-gradle-plugin'
            displayName = 'WarpFleet Gradle Plugin'
            implementationClass = 'io.warp10.warpfleet.WFPlugin'
        }
    }
}

jar {
    manifest {
        attributes('WarpFleet-Description': project.description)
        attributes('WarpFleet-Group': project.group)
        attributes('WarpFleet-Artifact': project.name)
        attributes('WarpFleet-Version': project.version)
    }

    from('src/main/warpscript') {
        //
        // Only consider macros which are in our namespace
        //
        include project.group + '/' + project.name + '/*.mc2'
        include project.group + '/' + project.name + '/**/*.mc2'
    }

    from('.') {
        include 'README.md'
        include project.group + '-' + project.name + '.conf'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version = project.version
            from components.java
            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/senx/WarpFleet-gradle-plugin'

                scm {
                    connection = 'scm:git:git://github.com/senx/WarpFleet-gradle-plugin'
                    developerConnection = 'scm:git:ssh://github.com/senx/WarpFleet-gradle-plugin'
                    url = 'https://github.com/senx/WarpFleet-gradle-plugin'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'senx'
                        name = 'SenX'
                        email = 'contact@senx.io'
                    }
                }
            }
        }
    }

    repositories {
        if (project.hasProperty('ossrhUsername')) {
            maven {
                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
        if (project.hasProperty('nexusUsername')) {
            maven {
                name 'nexus'
                allowInsecureProtocol true
                url "$nexusHost/repository/maven-releases/"
                credentials {
                    username nexusUsername
                    password nexusPassword
                }
            }
        }
    }
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

if (project.hasProperty('ossrhUsername')) {
    nexusStaging {
        packageGroup = 'io.warp10'
        username ossrhUsername
        password ossrhPassword
    }
}

//
// Artifact Signing
//
if (project.hasProperty('signing.gnupg.keyName')) {
    signing {
        useGpgCmd()
        sign publishing.publications
    }
}
/*
pluginBundle {
    website = 'https://github.com/Praqma/gradle-plugin-bootstrap'
    vcsUrl = 'scm:git@github.com:Praqma/gradle-plugin-bootstrap.git'
    tags = ['demo', 'example', 'quickstart']

    plugins {
        demoPlugin {
            id = 'com.praqma.demo.DemoPlugin'
            displayName = 'Gradle Multi Git plugin'
            description = 'Demo plugin to use as a starting point for custom plugin development'
        }
    }
}*/
